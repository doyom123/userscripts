// ==UserScript==
// @name     Garmin Connect Workout
// @namespace https://connect.garmin.com
// @include https://connect.garmin.com/modern/workout/edit/*
// @version  1
// @grant    none
// @require https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js 
// ==/UserScript==



idList = []
cloned = false
workoutType = null
workoutSelect = {
  "workout-step-warm": 0,
  "workout-step-run": 1,
  "workout-step-recover": 2,
  "workout-step-rest": 3,
  "workout-step-cool": 4,
  "workout-step-other": 5
}

durationSelect = {
  1:"step-duration-time",
  2:"step-duration-distance",
  3:"step-duration-lap-button",
  4:"step-duration-cal",
  5:"step-duration-hr"
}
durationIdx = null
durationTime = null
durationUnit = null

//#duration-distance
durationValue = null
durationOption = null


var observer = new MutationObserver(function(mutations) {
  mutations.forEach(function(mutation) {
    if (!mutation.addedNodes) return

    for (var i = 0; i < mutation.addedNodes.length; i++) {
      // do things to your newly added nodes here
      
      var node = mutation.addedNodes[i]
      
      if(node.classList.contains('workout-edit')) {
        var editor = document.querySelector('.workout-editor')
        var steps = editor.querySelectorAll('.workout-step')
        for(let i = 0; i < steps.length; i++) {
          //console.log(steps[i])
          //Add id
          idList.push(getIdNum(steps[i]))

          //add button here
          let div = document.createElement('span')
          div.classList.add('pull-left')
         
          let clone = document.createElement('a')
          clone.classList.add('cloneBtn')
          clone.innerHTML = 'c'
          div.append(clone)
          
          clone.onclick = function() {
            console.log('event listener')
            let currStep = this.parentNode.parentNode
            workoutType = currStep.classList[1]
            console.log(workoutType)
            
            //TODO: change these to value instead of index
            let duration = currStep.querySelector('.select-step-duration')
            console.log('duration id = ' + duration.selectedIndex)
            durationIdx = duration.selectedIndex
            let durationDiv = currStep.querySelector('.step-duration')
            switch(duration.value) {
              case 'time':
                durationValue = durationDiv.querySelector('input[name="duration-time"]').value
                durationOption = null
                break
              case 'distance':
                durationValue = durationDiv.querySelector('input[name="duration-distance"]').value
                console.log('dist')
                durationOption = durationDiv.querySelector('select[name="distanceUnit"]').value
  
                break
              case 'lap.button':
                durationValue = null
                durationOption = null
                break
              case 'calories':
                durationValue = durationDiv.querySelector('input[name="duration-calories"]').value
                durationOption = null
                break
              case 'heart.rate.zone':
                durationOption = durationDiv.querySelector('select[name="heart-rate-select"]').value
                durationValue = durationDiv.querySelector('input[name="duration-heart-rate-custom"]').value
                break
              default:
                durationValue = null
                durationOption = null
                break
            }

            
            
            let clonedStep = $(currStep).clone(true, true)
            console.log(clonedStep)
            //clonedStep.attr("id", newId(currStep))
            var newStepBtn = document.getElementById('new-step')
            newStepBtn.click()
            console.log(newStepBtn)
            //$(currStep).after(clonedStep)
            //let clonedStep = currStep.cloneNode(true)
          
            //let newStepId = newId(clonedStep)
            //clonedStep.id = newStepId
            //currStep.parentNode.insertBefore(clonedStep, currStep.nextSibling)
            console.log($._data($(currStep), "events"))
            enableSave()
           
          }
          steps[i].append(div)
          
          
        }
        console.log(editor) 
      }
      
      if(node.classList.contains('workout-step')) {
        console.log("New node added")
        //idList.push(getIdNum(node))


        let prevWorkoutType = node.classList[1]
        
        node.classList.replace(prevWorkoutType, workoutType)
        
        let workoutIdx = workoutSelect[workoutType]
        let stepType = node.querySelector('.select-step-type')
        stepType.selectedIndex = workoutIdx
        
        //duration
        let duration = node.querySelector('.select-step-duration')
        duration.selectedIndex = durationIdx
        duration.dispatchEvent(new Event('change', { bubbles: true }));
        let durationDiv = node.querySelector('.step-duration')
        console.log('durationvalue ' + duration.value)
        switch(duration.value) {
          case 'time':
            durationDiv.querySelector('input[name="duration-time"]').value = durationValue
            break
          case 'distance':
            durationDiv.querySelector('input[name="duration-distance"]').value = durationValue
            durationDiv.querySelector('select[name="distanceUnit"]').value = durationOption
            break
          case 'lap.button':
            break
          case 'calories':
            durationDiv.querySelector('input[name="duration-calories"]').value = durationValue
            break
          case 'heart.rate.zone':
            durationDiv.querySelector('select[name="heart-rate-select"]').value = durationOption
            durationDiv.querySelector('input[name="duration-heart-rate-custom"]').value = durationValue
            break
          default:
            break
        }
      }
    }
  })
})

observer.observe(document.body, {
    childList: true
  , subtree: true
  , attributes: false
  , characterData: false
})

//observer.disconnect()

function cloneButton(node) {
  //Create div
  let div = document.createElement('div')
  div.classList.add('step-component')
  let clone = document.createElement('a')
  clone.innherHTML = 'c'
  clone.id = newId(clone)
  return div
}

function getIdNum(node) {
  console.log('getIdNum')
  let num = (node.id).split('-')[2]
  return parseInt(num)
}

function newId(node) {

  var newid = getIdNum(node) + 1
  console.log('newId')
  while(idList.includes(newid)) {
    console.log('increment')
    newid += 1 
  }
  let newidstr = "main-step-" + newid
  console.log(newidstr)
  return newidstr
}

function enableSave() {
  var saveBtn = document.getElementById('save-workout')
  saveBtn.classList.remove('disabled')
}